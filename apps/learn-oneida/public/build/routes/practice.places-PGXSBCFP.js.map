{
  "version": 3,
  "sources": ["../../../app/routes/practice.places.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/practice.places.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/practice.places.tsx\");\n  import.meta.hot.lastModified = \"1716730032014.9006\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport React from \"react\";\nimport { Heading } from \"@/design/components/heading\";\nimport { DATA_PLACES_IN_COMMUNITY } from \"~/components/articles/PlacesInTheCommunity\";\nimport { EnglishToOneidaQuiz } from \"~/components/practice/EnglishToOneidaQuiz\";\nimport { arrayify } from \"~/utils\";\nexport const meta = () => {\n  return [{\n    title: \"Places in the community\"\n  }, {\n    name: \"description\",\n    content: \"Quiz your Oneida knowledge by picking the right translation!\"\n  }];\n};\nconst DATA = DATA_PLACES_IN_COMMUNITY.filter(_c = datum => ![\"band_office\", \"community_centre\", \"health_centre\", \"longhouse\", \"drivein\", \"political_office\", \"radio_station\", \"reserve\"].includes(datum.key));\n_c2 = DATA;\nexport default function PracticePlaces() {\n  _s();\n  const [englishOptions, oneidaOptions] = React.useMemo(() => {\n    const resultEn = [];\n    const resultOn = [];\n    for (const datum of DATA) {\n      resultEn.push({\n        key: datum.key,\n        text: datum.en\n      });\n      resultOn.push({\n        key: datum.key,\n        text: arrayify(datum.on)[0]\n      });\n    }\n    return [resultEn, resultOn];\n  }, []);\n  return <Flex direction=\"column\" gap={4}>\n      <Heading level={1} variant=\"headlineL\">\n        Practice your knowledge of places in the community\n      </Heading>\n\n      <EnglishToOneidaQuiz englishOptions={englishOptions} oneidaOptions={oneidaOptions} />\n    </Flex>;\n}\n_s(PracticePlaces, \"sTzyXPhAYijPViLOVxFaDT6mklo=\");\n_c3 = PracticePlaces;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DATA$DATA_PLACES_IN_COMMUNITY.filter\");\n$RefreshReg$(_c2, \"DATA\");\n$RefreshReg$(_c3, \"PracticePlaces\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,mBAAkB;AAiCZ;AAtDN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AASO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AACA,IAAM,OAAO,yBAAyB,OAAO,KAAK,WAAS,CAAC,CAAC,eAAe,oBAAoB,iBAAiB,aAAa,WAAW,oBAAoB,iBAAiB,SAAS,EAAE,SAAS,MAAM,GAAG,CAAC;AAC5M,MAAM;AACS,SAAR,iBAAkC;AACvC,KAAG;AACH,QAAM,CAAC,gBAAgB,aAAa,IAAI,aAAAA,QAAM,QAAQ,MAAM;AAC1D,UAAM,WAAW,CAAC;AAClB,UAAM,WAAW,CAAC;AAClB,eAAW,SAAS,MAAM;AACxB,eAAS,KAAK;AAAA,QACZ,KAAK,MAAM;AAAA,QACX,MAAM,MAAM;AAAA,MACd,CAAC;AACD,eAAS,KAAK;AAAA,QACZ,KAAK,MAAM;AAAA,QACX,MAAM,SAAS,MAAM,EAAE,EAAE,CAAC;AAAA,MAC5B,CAAC;AAAA,IACH;AACA,WAAO,CAAC,UAAU,QAAQ;AAAA,EAC5B,GAAG,CAAC,CAAC;AACL,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC;AAAA,uDAAC,WAAQ,OAAO,GAAG,SAAQ,aAAY,kEAAvC;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,uBAAoB,gBAAgC,iBAArD;AAAA;AAAA;AAAA;AAAA,WAAmF;AAAA,OALhF;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,GAAG,gBAAgB,8BAA8B;AACjD,MAAM;AACN,IAAI;AAAJ,IAAQ;AAAR,IAAa;AACb,aAAa,IAAI,sCAAsC;AACvD,aAAa,KAAK,MAAM;AACxB,aAAa,KAAK,gBAAgB;AAElC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["React"]
}
