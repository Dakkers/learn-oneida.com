{
  "version": 3,
  "sources": ["../../../app/routes/practice.tense-conjugation-module-4.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/practice.tense-conjugation-module-4.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/practice.tense-conjugation-module-4.tsx\");\n  import.meta.hot.lastModified = \"1718240764417.0222\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport React, { useMemo } from \"react\";\nimport { Text } from \"@/design/components/text\";\nimport { Select } from \"@/design/components/select\";\nimport { Button } from \"@/design/primitives/button\";\nimport { PRONOUN_MAP_EN, PRONOUN_MAP_ONEIDA, pronouns, translatePhrase } from \"~/utils\";\nimport { z } from \"zod\";\nimport { TableAsForm } from \"~/components/practice/TableAsForm\";\nimport { createModule4Data } from \"~/data/module04\";\nimport { Link } from \"@/design/primitives/link\";\nimport { SectionHeading } from \"~/components/SectionHeading\";\nexport const meta = () => {\n  return [{\n    title: \"Tenses Conjugation for Verbs from Module 4\"\n  }, {\n    name: \"description\",\n    content: \"Practice your knowledge and understanding of tenses for verbs from module 4 in the Oneida language.\"\n  }];\n};\nexport default function PracticeTenseConjugation() {\n  _s();\n  const [word, setWord] = React.useState(\"here\");\n  const [pronoun, setPronoun] = React.useState(\"i\");\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const pronounOptions = React.useMemo(() => {\n    return pronouns.map(pronoun => ({\n      label: `${PRONOUN_MAP_ONEIDA[pronoun]} (${PRONOUN_MAP_EN[pronoun]})`,\n      value: pronoun\n    }));\n  }, []);\n  const datumKeys = useMemo(() => {\n    if (word === \"here\") {\n      return [\"data-is-here\", \"data-was-here\", \"data-will-be-here\", \"data-might-be-here\", \"data-is-not-here\", \"data-was-not-here\", \"data-will-not-be-here\"];\n    } else if (word === \"there\") {\n      return [\"data-is-there\", \"data-was-there\", \"data-will-be-there\", \"data-might-be-there\", \"data-is-not-there\", \"data-was-not-there\", \"data-will-not-be-there\"];\n    } else if (word === \"home\") {\n      return [\"data-is-at-home\", \"data-was-at-home\", \"data-will-be-at-home\", \"data-might-be-at-home\", \"data-is-not-at-home\", \"data-was-not-at-home\", \"data-will-not-be-at-home\"];\n    } else if (word === \"lives\") {\n      return [\"data-lives-there\", \"data-used-to-live-there\", \"data-will-live-there\", \"data-might-live-there\", \"data-doesnt-live-there\", \"data-didnt-used-to-live-there\", \"data-will-not-live-there\"];\n    } else if (word === \"want-think\") {\n      return [\"data-want\", \"data-dont-want\", \"data-used-to-want\", \"data-didnt-used-to-want\", \"data-thought\"];\n    }\n    return [];\n  }, [word]);\n  const rows = useMemo(() => {\n    const data = createModule4Data();\n    return datumKeys.map(key => {\n      const datum = data.find(d => d.key === key);\n      return {\n        en: translatePhrase(datum.data.translation, pronoun),\n        key,\n        on: datum.data.phrases.find(p => p.pronoun === pronoun).phrase\n      };\n    });\n  }, [datumKeys, pronoun]);\n  const formSchema = useMemo(() => {\n    return z.object(Object.fromEntries(rows.map(r => [r.key, z.string().optional()])));\n  }, [rows]);\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading level={1}>Tense Conjugation for Module 4</SectionHeading>\n\n      <Text>\n        Use this page to practice conjugating the different tenses for a given\n        verb from <Link href=\"/learn/module04\">module 4</Link>.\n      </Text>\n\n      <Flex align=\"end\" gap={2}>\n        <Select label=\"Word\" onChange={value => {\n        setWord(value);\n        setHasStarted(false);\n      }} options={[{\n        label: \"Being here\",\n        value: \"here\"\n      }, {\n        label: \"Being there\",\n        value: \"there\"\n      }, {\n        label: \"Living there\",\n        value: \"lives\"\n      }, {\n        label: \"At home\",\n        value: \"home\"\n      }, {\n        label: \"Want / Think\",\n        value: \"want-think\"\n      }]} value={word} />\n\n        <Select label=\"Pronoun\" onChange={value => {\n        setPronoun(value);\n        setHasStarted(false);\n      }} options={pronounOptions} value={pronoun} />\n\n        <Button disabled={!word || hasStarted} onClick={() => setHasStarted(true)}>\n          Start\n        </Button>\n      </Flex>\n\n      {hasStarted && <TableAsForm bleed={32} checkCorrectness={(key, val) => TableAsForm.defaultCheckCorrectness({\n      key,\n      val,\n      rows\n    })} formSchema={formSchema} rows={rows} />}\n    </Flex>;\n}\n_s(PracticeTenseConjugation, \"S8qnrijJg1xRbOxnwJ5kgFEpIp0=\");\n_c = PracticeTenseConjugation;\nvar _c;\n$RefreshReg$(_c, \"PracticeTenseConjugation\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["React", "pronoun"]
}
