{
  "version": 3,
  "sources": ["../../../app/components/articles/Clans.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/Clans.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/Clans.tsx\");\n  import.meta.hot.lastModified = \"1711838251927.936\";\n}\n// REMIX HMR END\n\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { Flex } from \"@/design/components/flex\";\nimport { ParadigmTable, createParadigmData } from \"../ParadigmTable\";\nconst allowedPronouns = [\"i\", \"u\", \"m\", \"f\", \"uni\", \"u2\", \"us\", \"yall\", \"ms\", \"fs\"];\nconst dataTurtles = magicThing({\n  phrases: createPhrasesLol(\"a\u0294n\u00F3\u00B7w\u00E1l\"),\n  translation: \"{{pronoun}} {{refVerb}} Turtle Clan\"\n});\nconst dataBears = magicThing({\n  phrases: createPhrasesLol(\"ohkwa\u00B7l\u00ED\"),\n  translation: \"{{pronoun}} {{refVerb}} Bear Clan\"\n});\nconst dataWolves = magicThing({\n  phrases: createPhrasesLol(\"othayu\u00B7n\u00ED\"),\n  translation: \"{{pronoun}} {{refVerb}} Wolf Clan\"\n});\nexport function ClansArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"clans\" level={level}>\n        Clans\n      </SectionHeading>\n      <Text>\n        Here, you can learn about clan animals and how to say someone is from a\n        clan. The clans in Oneida are: bear, turtle, and wolf.\n      </Text>\n      <SectionHeading level={level + 1}>\n        Clan Animals\n      </SectionHeading>\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={[[\"bear\", \"ohkwa\u00B7l\u00ED\u02CD\"], [\"beaver\", \"tsyon\u00ED\u00B7tu\u0294\"], [\"deer\", \"osk\u028Cnu\u00B7t\u00FA\u00B7\"], [\"eel\", \"tawel\u00FA\u00B7ko\"], [\"hawk\", \"kalhak\u00FAha\u0332\"], [\"heron\", \"oh\u00E1\u00B7kwalut\"], [\"snipe\", \"taw\u00EDstawi\u0294\"], [\"turtle\", \"a\u0294no\u00B7w\u00E1l\"], [\"wolf\", \"othayu\u00B7n\u00ED\u02CD\"]].map(([en, on]) => ({\n      en,\n      on\n    }))} />\n      <SectionHeading level={level + 1}>\n        Phrases\n      </SectionHeading>\n      <ParadigmTable allowedPronouns={allowedPronouns} data={dataBears} />\n      <ParadigmTable allowedPronouns={allowedPronouns} data={dataTurtles} />\n      <ParadigmTable allowedPronouns={allowedPronouns} data={dataWolves} />\n    </Flex>;\n}\n_c = ClansArticle;\nfunction createPhrasesLol(animal) {\n  return [{\n    breakdown: [`${animal} ni`, {\n      text: \"waki\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"s\u028C\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"ho\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"yako\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"yukni\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"sni\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"yukw\u028C\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"sw\u028C\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"hoti\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }, {\n    breakdown: [`${animal} ni`, {\n      text: \"yoti\"\n    }, \"\u0294tal\u00F3\u00B7t\u028C\u0294\"]\n  }];\n}\nfunction magicThing(data) {\n  const result = createParadigmData(data, allowedPronouns);\n  result.type = \"PB\";\n  return result;\n}\nvar _c;\n$RefreshReg$(_c, \"ClansArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
