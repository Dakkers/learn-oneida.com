{
  "version": 3,
  "sources": ["../../../app/components/articles/Countries.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/Countries.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/Countries.tsx\");\n  import.meta.hot.lastModified = \"1711838251927.2507\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nconst LIST = [[\"Canada\", \"Kolahkow\u00E1nhne\u0332\"], [\"United States of America\", \"Ost\u028Chlon\u00FA\u00B7ke\"], [\"Europe\", \"Ohutsyakay\u00FA\u00B7ke\u0332\"], [\"China, Japan, Korea\", \"Tehatikahlat\u00ED\u00B7lut\u00E9\u00B7ke\"], [\"North America (Turtle Island)\", \"Anowal\u00E9\u00B7ke\"], [\"The whole world\", \"Ohutsyakwek\u00FA\"]].map(_c = ([en, on]) => ({\n  en,\n  on\n}));\n_c2 = LIST;\nexport function CountriesArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"countries\" level={level}>\n        Countries\n      </SectionHeading>\n      <Text>Some continents and other words are also included.</Text>\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={LIST} />\n    </Flex>;\n}\n_c3 = CountriesArticle;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LIST$[\\n  [\\\"Canada\\\", \\\"Kolahkow\\xE1nhne\\u0332\\\"],\\n  [\\\"United States of America\\\", \\\"Ost\\u028Chlon\\xFA\\xB7ke\\\"],\\n  [\\\"Europe\\\", \\\"Ohutsyakay\\xFA\\xB7ke\\u0332\\\"],\\n  [\\\"China, Japan, Korea\\\", \\\"Tehatikahlat\\xED\\xB7lut\\xE9\\xB7ke\\\"],\\n  [\\\"North America (Turtle Island)\\\", \\\"Anowal\\xE9\\xB7ke\\\"],\\n  [\\\"The whole world\\\", \\\"Ohutsyakwek\\xFA\\\"],\\n].map\");\n$RefreshReg$(_c2, \"LIST\");\n$RefreshReg$(_c3, \"CountriesArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAiCM;AAhCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4CAA8C,EAAE;AAAA,EACzF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuC;AACvC,cAAY,IAAI,eAAe;AACjC;AAOA,IAAM,OAAO,CAAC,CAAC,UAAU,wBAAgB,GAAG,CAAC,4BAA4B,yBAAc,GAAG,CAAC,UAAU,4BAAiB,GAAG,CAAC,uBAAuB,mCAAuB,GAAG,CAAC,iCAAiC,kBAAY,GAAG,CAAC,mBAAmB,iBAAc,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,OAAO;AAAA,EACvR;AAAA,EACA;AACF,EAAE;AACF,MAAM;AACC,SAAS,iBAAiB;AAAA,EAC/B,QAAQ;AACV,GAAG;AACD,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC;AAAA,uDAAC,kBAAe,IAAG,aAAY,OAAc,yBAA7C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,QAAK,kEAAN;AAAA;AAAA;AAAA;AAAA,WAAwD;AAAA,IACxD,mDAAC,gBAAa,SAAS,aAAa,sBAAsB,MAAM,QAAhE;AAAA;AAAA;AAAA;AAAA,WAAsE;AAAA,OALnE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AAAR,IAAa;AACb,aAAa,IAAI,uUAA+V;AAChX,aAAa,KAAK,MAAM;AACxB,aAAa,KAAK,kBAAkB;AAEpC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
