{
  "version": 3,
  "sources": ["../../../app/components/articles/EnglishNames.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/EnglishNames.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/EnglishNames.tsx\");\n  import.meta.hot.lastModified = \"1711838251926.8164\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { SectionHeading } from \"../SectionHeading\";\nconst names = [{\n  on: \"Al\u028Ct\",\n  en: \"Aaron\"\n}, {\n  on: \"\u00C1\u00B7kwilut\",\n  en: \"Abraham\"\n}, {\n  on: \"Tsi\u0294tw\u028Clu\",\n  en: \"Albert\"\n}, {\n  on: \"Tshyal\u00E9\",\n  en: \"Charlie\"\n}, {\n  on: \"T\u00E1\u00B7wet\",\n  en: \"David\"\n}, {\n  on: \"Tys\u00E1ts\",\n  en: \"George\"\n}, {\n  on: \"Tsh\u00E9le\",\n  en: \"Jerry\"\n}, {\n  on: \"Sawat\u00EDs\",\n  en: \"John\"\n}, {\n  on: \"K\u00E9nniha\",\n  en: \"Kenny\"\n}, {\n  on: \"Mathyu\",\n  en: \"Matthew\"\n}, {\n  on: \"Niklas\",\n  en: \"Nicholas\"\n}, {\n  on: \"Kw\u00EDtel\",\n  en: \"Peter\"\n}, {\n  on: \"Litsyet\",\n  en: \"Richard\"\n}, {\n  on: \"Tu\u00B7w\u00EDs\",\n  en: \"Thomas\"\n}, {\n  on: \"W\u00EDlo\",\n  en: \"William\"\n}, {\n  on: \"Klist\u00ED\u00B7n\",\n  en: [\"Christine\", \"Kristin\"]\n}, {\n  on: \"Tsil\u00F3\u00B7s\",\n  en: \"Delores\"\n}, {\n  on: [\"Aliskwe\", \"Al\u00EDsakwe\"],\n  en: \"Elizabeth\"\n}, {\n  on: \"Katl\u00ED\u00B7n\",\n  en: \"Katherine\"\n}, {\n  on: [\"Kw\u00E1klit\", \"Kow\u00E1klit\"],\n  en: \"Margret\"\n}, {\n  on: \"Mahtih\",\n  en: \"Martha\"\n}, {\n  on: \"W\u00E1\u00B7li\",\n  en: \"Mary\"\n}, {\n  on: \"N\u00ED\u00B7ki\",\n  en: [\"Nellie\", \"Amelia\"]\n}, {\n  on: \"L\u00E1\u00B7kel\",\n  en: \"Rachel\"\n}, {\n  on: \"S\u00E1\u00B7l\",\n  en: \"Sara\"\n}, {\n  on: \"S\u00F3\u00B7s\",\n  en: \"Susan\"\n}];\nexport function EnglishNamesArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"english-names\" level={level}>\n        English Names\n      </SectionHeading>\n      {/* @ts-expect-error To be addressed in LO-12 */}\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={names} />\n    </Flex>;\n}\n_c = EnglishNamesArticle;\nvar _c;\n$RefreshReg$(_c, \"EnglishNamesArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AA0GM;AAzGN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AAMA,IAAM,QAAQ,CAAC;AAAA,EACbaAAa,SAAS;AAC7B,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI,CAAC,WAAW,aAAU;AAAA,EAC1B,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI,CAAC,cAAW,aAAU;AAAA,EAC1B,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI,CAAC,UAAU,QAAQ;AACzB,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AACN,CAAC;AACM,SAAS,oBAAoB;AAAA,EAClC,QAAQ;AACV,GAAG;AACD,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC;AAAA,uDAAC,kBAAe,IAAG,iBAAgB,OAAc,6BAAjD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,gBAAa,SAAS,aAAa,sBAAsB,MAAM,SAAhE;AAAA;AAAA;AAAA;AAAA,WAAuE;AAAA,OALpE;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
