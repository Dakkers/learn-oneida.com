{
  "version": 3,
  "sources": ["../../../app/components/DialogueTable.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/DialogueTable.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/DialogueTable.tsx\");\n  import.meta.hot.lastModified = \"1718240764402.843\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { TextArray } from \"@/utils/TextArray\";\nexport function DialogueTable({\n  data\n}) {\n  const columns = [{\n    accessorKey: \"left\",\n    cell: value => TableCell(value),\n    header: \"\"\n  }, {\n    accessorKey: \"right\",\n    cell: value => TableCell(value),\n    header: \"\"\n  }];\n  return <TableWrapper columns={columns} data={data.map(TableWrapper.mapLeftRight)} />;\n}\n_c = DialogueTable;\nfunction TableCell(value) {\n  if (value === null || typeof value === \"string\" || Array.isArray(value)) {\n    return TableWrapper.textArrayCell(value);\n  }\n  return <Flex direction=\"column\" gap={1}>\n      <TextArray>{value.one}</TextArray>\n    </Flex>;\n}\n_c2 = TableCell;\nvar _c, _c2;\n$RefreshReg$(_c, \"DialogueTable\");\n$RefreshReg$(_c2, \"TableCell\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAmCS;AAlCT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkC;AAClC,cAAY,IAAI,eAAe;AACjC;AAMO,SAAS,cAAc;AAAA,EAC5B;AACF,GAAG;AACD,QAAM,UAAU,CAAC;AAAA,IACf,aAAa;AAAA,IACb,MAAM,WAAS,UAAU,KAAK;AAAA,IAC9B,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,aAAa;AAAA,IACb,MAAM,WAAS,UAAU,KAAK;AAAA,IAC9B,QAAQ;AAAA,EACV,CAAC;AACD,SAAO,mDAAC,gBAAa,SAAkB,MAAM,KAAK,IAAI,aAAa,YAAY,KAAxE;AAAA;AAAA;AAAA;AAAA,SAA2E;AACpF;AACA,KAAK;AACL,SAAS,UAAU,OAAO;AACxB,MAAI,UAAU,QAAQ,OAAO,UAAU,YAAY,MAAM,QAAQ,KAAK,GAAG;AACvE,WAAO,aAAa,cAAc,KAAK;AAAA,EACzC;AACA,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC,6DAAC,aAAW,gBAAM,OAAlB;AAAA;AAAA;AAAA;AAAA,SAAsB,KADnB;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,eAAe;AAChC,aAAa,KAAK,WAAW;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
