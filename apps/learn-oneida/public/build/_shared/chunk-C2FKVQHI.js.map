{
  "version": 3,
  "sources": ["../../../app/components/articles/DomesticatedAnimals.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/DomesticatedAnimals.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/DomesticatedAnimals.tsx\");\n  import.meta.hot.lastModified = \"1711838251926.9666\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nexport function DomesticatedAnimalsArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"domesticated-animals\" level={level}>\n        Domesticated Animals\n      </SectionHeading>\n\n      <Text>\n        A <b>kan\u00E1skwa\u0294</b> is a domesticated animal. The root word is{\" \"}\n        <b>naskw</b>.\n      </Text>\n\n      <TableWrapper columns={[{\n      accessorKey: \"en\",\n      header: \"English\"\n    }, {\n      accessorKey: \"one\",\n      cell: TableWrapper.textArrayCellBold,\n      header: \"Translation\"\n    }]} data={[[\"dog\", \"\u00E9\u00B7lhal\"], [\"cat\", \"tak\u00F3\u00B7s\"], [\"goat\", \"kaya\u0294t\u00E1klahse\u0294\"], [\"sheep\", \"s\u00EDksik\"], [\"chicken\", \"k\u00EDtkit\"], [\"pig\", \"k\u00F3skos\"], [\"cow\", \"tyonh\u00FAhskwalut\"], [\"horse\", \"kohsa\u00B7t\u028C\u0301s\"]].map(([en, one]) => ({\n      en,\n      one\n    }))} />\n\n      <Text>\n        <b>oth\u00F3ska\u0294</b> is a word to indicate the animal is a baby.\n      </Text>\n\n      <TableWrapper columns={[{\n      accessorKey: \"en\",\n      header: \"English\"\n    }, {\n      accessorKey: \"one\",\n      cell: TableWrapper.textArrayCellBold,\n      header: \"Translation\"\n    }]} data={[[\"puppy\", \"\u00E9\u00B7lhal oth\u00F3ska\u0294\"], [\"kitten\", \"tak\u00F3\u00B7s oth\u00F3ska\u0294\"], [\"kid\", \"kaya\u0294t\u00E1klahse\u0294 oth\u00F3ska\u0294\"], [\"lamb\", \"s\u00EDksik oth\u00F3ska\u0294\"], [\"chick\", \"k\u00EDtkit oth\u00F3ska\u0294\"], [\"piglet\", \"k\u00F3skos oth\u00F3ska\u0294\"], [\"calf\", \"tyonh\u00FAhskwalut oth\u00F3ska\u0294\"], [\"foal\", \"kohsa\u00B7t\u028C\u0301s oth\u00F3ska\u0294\"]].map(([en, one]) => ({\n      en,\n      one\n    }))} />\n    </Flex>;\n}\n_c = DomesticatedAnimalsArticle;\nvar _c;\n$RefreshReg$(_c, \"DomesticatedAnimalsArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AA4BM;AA3BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiD;AACjD,cAAY,IAAI,eAAe;AACjC;AAOO,SAAS,2BAA2B;AAAA,EACzC,QAAQ;AACV,GAAG;AACD,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC;AAAA,uDAAC,kBAAe,IAAG,wBAAuB,OAAc,oCAAxD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,QAAK;AAAA;AAAA,MACF,mDAAC,OAAE,iCAAH;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,MAAI;AAAA,MAA4C;AAAA,MAC9D,mDAAC,OAAE,qBAAH;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MAAI;AAAA,SAFd;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAEA,mDAAC,gBAAa,SAAS,CAAC;AAAA,MACxB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,MAAM,aAAa;AAAA,MACnB,QAAQ;AAAA,IACV,CAAC,GAAG,MAAM,CAAC,CAAC,OAAO,cAAQ,GAAG,CAAC,OAAO,cAAQ,GAAG,CAAC,QAAQ,6BAAgB,GAAG,CAAC,SAAS,WAAQ,GAAG,CAAC,WAAW,WAAQ,GAAG,CAAC,OAAO,WAAQ,GAAG,CAAC,OAAO,mBAAgB,GAAG,CAAC,SAAS,yBAAY,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,GAAG,OAAO;AAAA,MAClN;AAAA,MACA;AAAA,IACF,EAAE,KAVA;AAAA;AAAA;AAAA;AAAA,WAUG;AAAA,IAEH,mDAAC,QACC;AAAA,yDAAC,OAAE,gCAAH;AAAA;AAAA;AAAA;AAAA,aAAW;AAAA,MAAI;AAAA,SADjB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,mDAAC,gBAAa,SAAS,CAAC;AAAA,MACxB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,MAAM,aAAa;AAAA,MACnB,QAAQ;AAAA,IACV,CAAC,GAAG,MAAM,CAAC,CAAC,SAAS,+BAAiB,GAAG,CAAC,UAAU,+BAAiB,GAAG,CAAC,OAAO,8CAAyB,GAAG,CAAC,QAAQ,4BAAiB,GAAG,CAAC,SAAS,4BAAiB,GAAG,CAAC,UAAU,4BAAiB,GAAG,CAAC,QAAQ,oCAAyB,GAAG,CAAC,QAAQ,0CAAqB,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,GAAG,OAAO;AAAA,MAC9R;AAAA,MACA;AAAA,IACF,EAAE,KAVA;AAAA;AAAA;AAAA;AAAA,WAUG;AAAA,OApCA;AAAA;AAAA;AAAA;AAAA,SAqCL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,4BAA4B;AAE7C,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
