{
  "version": 3,
  "sources": ["../../../app/components/articles/Seasons.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/Seasons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/Seasons.tsx\");\n  import.meta.hot.lastModified = \"1711838251924.0024\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { SectionHeading } from \"../SectionHeading\";\nexport const DATA_SEASONS = [{\n  en: \"Spring\",\n  on: [\"kukwi\u00B7t\u00E9\u00B7\", \"kukwit\u00E9\u00B7ne\"],\n  key: \"spring\"\n}, {\n  en: \"Summer\",\n  on: \"kwa\u0294k\u028Cnh\u00E9\u00B7ke\",\n  key: \"summer\"\n}, {\n  en: \"Autumn\",\n  on: \"kan\u028Cn\u00E1\u00B7ke\",\n  key: \"fall\"\n}, {\n  en: \"Winter\",\n  on: \"kohsl\u00E1\u00B7ke\",\n  key: \"winter\"\n}];\nexport function SeasonsArticle({\n  level = 1\n}) {\n  const seasonsDuring = [{\n    en: \"During the spring\",\n    on: \"tsi\u0294 nikukwite\u00B7se\u0294\"\n  }, {\n    en: \"During the summer\",\n    on: \"tsi\u0294 niwa\u0294k\u028C\u0301nhes\"\n  }, {\n    en: \"During the autumn\",\n    on: \"tshi\u0294tkan\u028Cn\u00E1\u00B7ke\"\n  }, {\n    en: \"During the winter\",\n    on: \"tsi\u0294 niwak\u00F3hsles\"\n  }];\n  const otherPhrases = [{\n    en: \"Seasons\",\n    on: [\"wakanhat\u00E9ni\u0294\", \"wak\u028Cnhat\u00E9ni\u0294\"]\n  }, {\n    en: \"Last summer\",\n    on: \"tshikwa\u0294k\u028C\u0301nhe\u0294\"\n  }, {\n    en: \"Each winter\",\n    on: \"ya\u0294tewakohsl\u00E1ke\"\n  }, {\n    en: \"Last winter\",\n    on: \"tshikohsl\u00E1\u00B7ke\"\n  }, {\n    en: \"Wintertime\",\n    on: \"kohsla\u0294k\u00E9\u00B7ne\"\n  }];\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"seasons\" level={level}>\n        Seasons\n      </SectionHeading>\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={DATA_SEASONS} />\n      <SectionHeading id=\"seasons-during\" level={level + 1}>\n        During a season\n      </SectionHeading>\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={seasonsDuring} />\n      <SectionHeading id=\"seasons-other\" level={level + 1}>\n        Other phrases\n      </SectionHeading>\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={otherPhrases} />\n    </Flex>;\n}\n_c = SeasonsArticle;\nvar _c;\n$RefreshReg$(_c, \"SeasonsArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAyEM;AAxEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0CAA4C,EAAE;AAAA,EACvF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAMO,IAAM,eAAe,CAAC;AAAA,EAC3B,IAAI;AAAA,EACJ,IAAI,CAAC,sBAAa,kBAAY;AAAA,EAC9B,KAAK;AACP,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AACP,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AACP,GAAG;AAAA,EACD,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AACP,CAAC;AACM,SAAS,eAAe;AAAA,EAC7B,QAAQ;AACV,GAAG;AACD,QAAM,gBAAgB,CAAC;AAAA,IACrB,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,CAAC;AACD,QAAM,eAAe,CAAC;AAAA,IACpB,IAAI;AAAA,IACJ,IAAI,CAAC,wBAAgB,2BAAc;AAAA,EACrC,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,GAAG;AAAA,IACD,IAAI;AAAA,IACJ,IAAI;AAAA,EACN,CAAC;AACD,SAAO,mDAAC,QAAK,WAAU,UAAS,KAAK,GACjC;AAAA,uDAAC,kBAAe,IAAG,WAAU,OAAc,uBAA3C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,gBAAa,SAAS,aAAa,sBAAsB,MAAM,gBAAhE;AAAA;AAAA;AAAA;AAAA,WAA8E;AAAA,IAC9E,mDAAC,kBAAe,IAAG,kBAAiB,OAAO,QAAQ,GAAG,+BAAtD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,gBAAa,SAAS,aAAa,sBAAsB,MAAM,iBAAhE;AAAA;AAAA;AAAA;AAAA,WAA+E;AAAA,IAC/E,mDAAC,kBAAe,IAAG,iBAAgB,OAAO,QAAQ,GAAG,6BAArD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,gBAAa,SAAS,aAAa,sBAAsB,MAAM,gBAAhE;AAAA;AAAA;AAAA;AAAA,WAA8E;AAAA,OAZ3E;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
