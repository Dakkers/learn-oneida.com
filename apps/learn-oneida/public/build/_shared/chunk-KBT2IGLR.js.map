{
  "version": 3,
  "sources": ["../../../app/utils/index.ts", "../../../app/components/TextBreakdown.tsx", "../../../@/design/components/Bleed.tsx", "../../../@/design/primitives/table.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/index.ts\"\n);\nimport.meta.hot.lastModified = \"1716730032016.958\";\n}\n// REMIX HMR END\n\nexport function formatTranslation(\n  text: string,\n  params: Record<string, string>,\n) {\n  let result = text;\n  for (const key in params) {\n    result = result.replace(new RegExp(`{{${key}}}`, \"g\"), params[key]);\n  }\n  return result;\n}\n\nexport type PronounSingular = \"i\" | \"u\" | \"m\" | \"f\" | \"it\";\nexport type PronounDualic = \"uni\" | \"soni\" | \"u2\" | \"2m\" | \"2f\";\nexport type PronounPlural = \"us\" | \"theyni\" | \"yall\" | \"ms\" | \"fs\";\nexport type Pronoun = PronounSingular | PronounDualic | PronounPlural;\n\nexport const singlePronouns: Pronoun[] = [\"i\", \"u\", \"m\", \"f\", \"it\"];\nexport const dualicPronouns: Pronoun[] = [\"uni\", \"soni\", \"u2\", \"2m\", \"2f\"];\nexport const pluralPronouns: Pronoun[] = [\"us\", \"theyni\", \"yall\", \"ms\", \"fs\"];\n\nexport const pronouns: Pronoun[] = [\n  ...singlePronouns,\n  ...dualicPronouns,\n  ...pluralPronouns,\n];\n\n/** These are pronouns for blue pronominals. Because there are duplicates in the blue set,\n * we this is a smaller set than the full pronouns list. */\nexport const pronounsBlue: Pronoun[] = [\n  ...singlePronouns,\n  \"uni\",\n  \"u2\",\n  \"2m\",\n  \"2f\",\n  \"us\",\n  \"yall\",\n];\n\nexport const PRONOUN_MAP_ONEIDA: Record<Pronoun, string> = {\n  i: \"\u00ED\",\n  u: \"is\u00E9\",\n  m: \"laulh\u00E1\",\n  f: \"akaulh\u00E1\",\n  it: \"aulh\u00E1\",\n  uni: \"tetniy\u00E1hse\",\n  soni: \"teyakniy\u00E1hse\",\n  u2: \"tesniy\u00E1hse\",\n  \"2m\": \"tehniy\u00E1hse\",\n  \"2f\": \"tekniy\u00E1hse\",\n  us: \"twakweku\",\n  theyni: \"yakwakweku\",\n  yall: \"swakweku\",\n  ms: \"latikweku\",\n  fs: \"kutikweku\",\n};\n\nexport const PRONOUN_MAP_EN: Record<Pronoun, string> = {\n  i: \"I\",\n  u: \"You\",\n  m: \"He\",\n  f: \"She\",\n  it: \"It\",\n  uni: \"You and I\",\n  soni: \"Someone and I\",\n  u2: \"You two\",\n  \"2m\": \"Two males\",\n  \"2f\": \"Two females\",\n  us: \"You all and I\",\n  theyni: \"They and I\",\n  yall: \"All of you\",\n  ms: \"They (males)\",\n  fs: \"They (females)\",\n};\n\nexport const PRONOUN_MAP_EN_OBJECTIVE: Record<Pronoun, string> = {\n  i: \"Me\",\n  u: \"You\",\n  m: \"Him\",\n  f: \"Her\",\n  it: \"It\",\n  uni: \"You and I\",\n  soni: \"Someone and I\",\n  u2: \"You two\",\n  \"2m\": \"Two males\",\n  \"2f\": \"Two females\",\n  us: \"You all and I\",\n  theyni: \"Them and I\",\n  yall: \"All of you\",\n  ms: \"Them (males)\",\n  fs: \"Them (females)\",\n};\n\nexport const PRONOUN_MAP_EN_POSSESSIVE: Record<Pronoun, string> = {\n  i: \"My\",\n  u: \"Your\",\n  m: \"His\",\n  f: \"Her\",\n  it: \"Its\",\n  uni: \"Our (you and I)\",\n  soni: \"Our (someone and I)\",\n  u2: \"All your\",\n  \"2m\": \"Their (males, mix)\",\n  \"2f\": \"Their (females)\",\n  us: \"All our\",\n  theyni: \"All our (they and I)\",\n  yall: \"All of yours\",\n  ms: \"All (males) their\",\n  fs: \"All (females) their\",\n};\n\nexport const REF_VERB_MAP: Record<Pronoun, string> = {\n  i: \"am\",\n  u: \"are\",\n  m: \"is\",\n  f: \"is\",\n  it: \"is\",\n  uni: \"are\",\n  soni: \"are\",\n  u2: \"are\",\n  \"2m\": \"are\",\n  \"2f\": \"are\",\n  us: \"are\",\n  theyni: \"are\",\n  yall: \"are\",\n  ms: \"are\",\n  fs: \"are\",\n};\n\nexport const REF_VERB_PASTTENSE_MAP: Record<Pronoun, string> = {\n  i: \"have\",\n  u: \"have\",\n  m: \"has\",\n  f: \"has\",\n  it: \"has\",\n  uni: \"have\",\n  soni: \"have\",\n  u2: \"have\",\n  \"2m\": \"have\",\n  \"2f\": \"have\",\n  us: \"have\",\n  theyni: \"have\",\n  yall: \"have\",\n  ms: \"have\",\n  fs: \"have\",\n};\n\nexport const REF_VERB_PASTTENSE_ALT_MAP: Record<Pronoun, string> = {\n  i: \"was\",\n  u: \"were\",\n  m: \"was\",\n  f: \"was\",\n  it: \"was\",\n  uni: \"were\",\n  soni: \"were\",\n  u2: \"were\",\n  \"2m\": \"were\",\n  \"2f\": \"were\",\n  us: \"were\",\n  theyni: \"were\",\n  yall: \"were\",\n  ms: \"were\",\n  fs: \"were\",\n};\n\nexport const PURPLES_MAP = {\n  i_you: \"I \u2192 you\",\n  i_him: \"I \u2192 him\",\n  i_her: \"I \u2192 her\",\n  you_me: \"You \u2192 me\",\n  you_him: \"You \u2192 him\",\n  you_her: \"You \u2192 her\",\n  he_me: \"He \u2192 me\",\n  he_you: \"He \u2192 you\",\n  he_him: \"He \u2192 him\",\n  he_her: \"He \u2192 her\",\n  she_me: \"She \u2192 me\",\n  she_you: \"She \u2192 you\",\n  she_him: \"She \u2192 him\",\n  she_her: \"She \u2192 her\",\n};\n\nexport const isPlural = (pronoun: Pronoun) => pluralPronouns.includes(pronoun);\n\nexport const arrayify = (value: unknown) =>\n  Array.isArray(value) ? value : [value];\n\nexport function translatePhrase(\n  phrase: string,\n  pronoun: Pronoun,\n  translationFn?: (arg: { pronoun: Pronoun }) => void,\n) {\n  return formatTranslation(phrase, {\n    pronoun: PRONOUN_MAP_EN[pronoun],\n    pronounObjective: PRONOUN_MAP_EN_OBJECTIVE[pronoun],\n    pronounPossessive: PRONOUN_MAP_EN_POSSESSIVE[pronoun],\n    refVerb: REF_VERB_MAP[pronoun],\n    refVerbPast: REF_VERB_PASTTENSE_MAP[pronoun],\n    refVerbPastAlt: REF_VERB_PASTTENSE_ALT_MAP[pronoun],\n    ...(translationFn ? translationFn({ pronoun }) : {}),\n  });\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/TextBreakdown.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/TextBreakdown.tsx\");\n  import.meta.hot.lastModified = \"1718240757360.078\";\n}\n// REMIX HMR END\n\nimport { cn } from \"@/lib/utils\";\nimport { arrayify } from \"~/utils\";\nimport { whisperizeWord } from \"~/utils/words\";\nexport function TextBreakdown({\n  as: Tag = \"span\",\n  breakdown: _breakdown,\n  prefix,\n  suffix,\n  typeFallback,\n  whispered: _whispered = false,\n  wrap\n}) {\n  const breakdown = getPrefixArr(prefix).concat(_breakdown).concat(getSuffixArr(suffix));\n  return <Tag>\n      {breakdown.map((part, i) => {\n      const innerTextProps = {\n        wrap\n      };\n      const isLastPart = i === breakdown.length - 1;\n      const whispered = isLastPart && !!_whispered;\n      if (typeof part === \"string\") {\n        const isPastTense = [\"kwe\u0294\", \"hkwe\u0294\", \"hn\u00E9\u00B7\", \"hne\u0294\"].includes(part) && isLastPart || [\"tshi\", \"tsha\u0294\"].includes(part) && i === 0;\n        return <InnerText {...innerTextProps} key={i} type={isPastTense ? \"PAST\" : undefined}>\n              {whispered ? whisperizeWord(part) : part}\n            </InnerText>;\n      }\n      const text = Array.isArray(part) ? part[0] : part.text;\n      const type = Array.isArray(part) ? part[1] : part.type;\n      const hasLeadingWhitespace = text.trimStart() !== text;\n      const hasTrailingWhitespace = text.trimStart() !== text;\n      return <InnerText {...innerTextProps} key={i} type={type ?? typeFallback}>\n            {hasLeadingWhitespace ? \"&nbsp\" : \"\"}\n            {whispered ? whisperizeWord(text) : text}\n            {hasTrailingWhitespace ? \"&nbsp\" : \"\"}\n          </InnerText>;\n    })}\n    </Tag>;\n}\n_c = TextBreakdown;\nfunction InnerText({\n  children,\n  type,\n  wrap\n}) {\n  return <span className={cn(arrayify(type ?? []).map(t => t ? BREAKDOWN_TYPE_MAP[t] : undefined), \"font-bold\", wrap === \"nowrap\" && \"text-nowrap\")}>\n      {children}\n    </span>;\n}\n_c2 = InnerText;\nconst BREAKDOWN_TYPE_MAP = {\n  CIS: \"text-lime-500\",\n  DEF: \"text-emerald-400\",\n  DUAL: \"text-lime-500\",\n  EP: \"text-gray-400\",\n  FUT: \"text-emerald-400\",\n  HAB: \"text-emerald-400\",\n  IFUT: \"text-emerald-400\",\n  JOIN: \"text-yellow-400\",\n  OP: \"underline decoration-wavy decoration-black\",\n  PAST: \"text-emerald-400\",\n  PB: \"text-blue-600\",\n  PFV: \"text-emerald-400\",\n  PLB: \"text-cyan-400\",\n  PP: \"text-violet-500\",\n  PR: \"text-red-600\",\n  PTV: \"text-lime-500\",\n  RECP: \"text-green-700\",\n  REFL: \"text-green-700\",\n  REP: \"text-yellow-600\",\n  RPL: \"text-gray-400\",\n  SRFL: \"text-green-700\"\n};\nfunction getSuffixArr(suffix) {\n  if (!suffix) {\n    return [];\n  }\n  const text = suffix === \"hne\" ? \"hn\u00E9\u00B7\" : suffix === \"kwe\" ? \"kwe\u0294\" : suffix === \"hkwe\" ? \"hkwe\u0294\" : suffix === \"hake\" ? \"hake\u0294\" : suffix === \"heke\" ? \"heke\u0294\" : suffix === \"hak\" ? \"hak\u0294\" : suffix === \"ake\" ? \"ake\u0294\" : suffix === \"\u00E1ke\" ? \"\u00E1ke\u0294\" : undefined;\n  if (!text) {\n    return [];\n  }\n  return [{\n    text,\n    type: \"PAST\"\n  }];\n}\nfunction getPrefixArr(prefix) {\n  if (!prefix) {\n    return [];\n  } else if (prefix === \"RECP\") {\n    return [{\n      text: \"te\",\n      type: \"RECP\"\n    }];\n  } else if (prefix === \"FUT\") {\n    return [{\n      text: \"\u028C\",\n      type: \"FUT\"\n    }];\n  } else if (prefix === \"IFUT\") {\n    return [{\n      text: \"a\",\n      type: \"IFUT\"\n    }];\n  } else {\n    return [];\n  }\n}\nexport function convertBreakdownToPlainText(breakdown, options = {}) {\n  const breakdownDuplicate = getPrefixArr(options.prefix).concat(breakdown).concat(getSuffixArr(options.suffix));\n  return breakdownDuplicate.map(part => Array.isArray(part) ? part[0] : typeof part === \"object\" ? part.text : part).join(\"\");\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"TextBreakdown\");\n$RefreshReg$(_c2, \"InnerText\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import { cn } from \"@/lib/utils\";\nimport { responsiveClassName } from \"@/utils/responsive\";\nimport { MarginProps } from \"@/utils/useMargin\";\n\nexport interface BleedProps extends MarginProps {\n  children: React.ReactNode;\n}\n\nexport function Bleed({ children, m, mx, my, ml, mt, mr, mb }: BleedProps) {\n  return (\n    <div\n      className={cn(\n        m && responsiveClassName(m, \"-m-\"),\n        mx && responsiveClassName(mx, \"-mx-\"),\n        my && responsiveClassName(my, \"-my-\"),\n        ml && responsiveClassName(ml, \"-ml-\"),\n        mr && responsiveClassName(mr, \"-mr-\"),\n        mb && responsiveClassName(mb, \"-mb-\"),\n        mt && responsiveClassName(mt, \"-mt-\"),\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n", "import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
