{
  "version": 3,
  "sources": ["../../../app/components/articles/Relationships.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/Relationships.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/Relationships.tsx\");\n  import.meta.hot.lastModified = \"1717069385784.3987\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { TextBreakdown } from \"../TextBreakdown\";\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nexport function RelationshipsArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"relationships\" level={level}>\n        Relationships\n      </SectionHeading>\n      <MarriedTable level={level} />\n      <InARelationshipTable level={level} />\n      <SeparatedTable level={level} />\n      <EngagedTable level={level} />\n      <SingleTable level={level} />\n      <OldManWomanTable level={level} />\n      <SpouseTable level={level} />\n      <BoyfriendGirlfriendTable level={level} />\n    </Flex>;\n}\n_c = RelationshipsArticle;\nconst createColumns = TableWrapper.createPastTenseColumns;\nfunction MarriedTable({\n  level = 2\n}) {\n  const rows = [[\"i\", \"wake\"], [\"u\", \"sa\"], [\"m\", \"lo\"], [\"f\", \"yako\"], [\"uni\", \"yukni\"], [\"u2\", \"sni\"], [\"soni\", \"yukni\"], [\"2m\", \"loti\"], [\"2f\", \"yoti\"], [\"us\", \"yukwa\"], [\"theyni\", \"yukwa\"], [\"yall\", \"swa\"], [\"ms\", \"loti\"], [\"fs\", \"yoti\"]].map(([pronoun, p]) => {\n    return {\n      pronoun,\n      breakdown: [{\n        text: p\n      }, \"ny\u00E1ku\u0294\"],\n      breakdownPast: [{\n        text: p\n      }, \"nyaku\"]\n    };\n  });\n  return <>\n      <SectionHeading id=\"married\" level={level + 1}>\n        Married\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={createColumns(\"PB\", {\n      suffix: \"hne\"\n    })} data={rows} />\n    </>;\n}\n_c2 = MarriedTable;\nfunction InARelationshipTable({\n  level = 2\n}) {\n  const rows = [{\n    pronoun: \"uni\",\n    breakdown: [\"\u00ED\", {\n      text: \"tn\"\n    }]\n  }, {\n    pronoun: \"u2\",\n    breakdown: [\"\u00ED\", {\n      text: \"sn\"\n    }]\n  }, {\n    pronoun: \"soni\",\n    breakdown: [{\n      text: \"y\u00E1kn\"\n    }]\n  }, {\n    pronoun: \"2m\",\n    breakdown: [\"\u00ED\u00B7\", {\n      text: \"n\"\n    }]\n  }, {\n    pronoun: \"2f\",\n    breakdown: [\"\u00ED\", {\n      text: \"kn\"\n    }]\n  }].map(row => {\n    return {\n      ...row,\n      breakdown: [...row.breakdown, \"ehse\"],\n      breakdownPast: [...row.breakdown, \"ehs\"]\n    };\n  });\n  return <>\n      <SectionHeading id=\"in-a-relationship\" level={level + 1}>\n        In a relationship\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={createColumns(\"PR\", {\n      suffix: \"kwe\"\n    })} data={rows} />\n    </>;\n}\n_c3 = InARelationshipTable;\nfunction SeparatedTable({\n  level = 2\n}) {\n  const rows = [[\"uni\", \"yuky\"], [\"u2\", \"tsy\"], [\"soni\", \"yuky\"], [\"2m\", \"hon\"], [\"2f\", \"yon\"]].map(([pronoun, p]) => {\n    return {\n      pronoun,\n      breakdown: [[\"te\", \"DUAL\"], {\n        text: p\n      }, \"atekh\u00E1shyu\"],\n      breakdownPast: [[\"te\", \"DUAL\"], {\n        text: p\n      }, \"atekhashyu\"]\n    };\n  });\n  return <>\n      <SectionHeading id=\"separated\" level={level + 1}>\n        Separated and Reconciled\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={createColumns(\"PB\", {\n      headerNow: \"Separated\",\n      headerPast: \"Reconciled\",\n      suffix: \"hne\"\n    })} data={rows} />\n    </>;\n}\n_c4 = SeparatedTable;\nfunction EngagedTable({\n  level = 2\n}) {\n  const rows = [[\"i\", \"wake\"], [\"soni\", \"yukni\"], [\"ms\", \"loti\"]].map(([pronoun, p]) => {\n    return {\n      pronoun,\n      breakdown: [{\n        text: p\n      }, \"ny\u00E1khe\u0294\"],\n      breakdownPast: [{\n        text: p\n      }, \"nk\u00E1khe\"]\n    };\n  });\n  return <>\n      <SectionHeading id=\"engaged\" level={level + 1}>\n        Engaged\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={createColumns(\"PB\", {\n      suffix: \"hkwe\"\n    })} data={rows} />\n    </>;\n}\n_c5 = EngagedTable;\nfunction SingleTable({\n  level = 2\n}) {\n  const rows = [[\"i\", \"k\"], [\"u\", \"s\"], [\"m\", \"l\"], [\"f\", \"yu\"]].map(([pronoun, p]) => {\n    return {\n      pronoun,\n      breakdown: [{\n        text: p\n      }, \"atatw\u028Cni\u00B7y\u00F3\"],\n      breakdownPast: [{\n        text: p\n      }, \"atatw\u028Cniyo\"]\n    };\n  });\n  return <>\n      <SectionHeading id=\"single\" level={level + 1}>\n        Single\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={createColumns(\"PR\", {\n      suffix: \"hne\"\n    })} data={rows} />\n    </>;\n}\n_c6 = SingleTable;\nfunction OldManWomanTable({\n  level = 2\n}) {\n  const rows = [[\"i\", \"li\", \"khe\"], [\"u\", \"etshe\", \"she\"], [\"m\", \"lo\", \"shako\"], [\"f\", \"luwa\", \"yutate\"]].map(([pronoun, m, f]) => {\n    return {\n      oldMan: [{\n        text: m\n      }, \"khst\u028C\u0301ha\u0332\"],\n      oldWoman: [{\n        text: f\n      }, \"khst\u028C\u0301ha\u0332\"],\n      pronoun\n    };\n  });\n  return <>\n      <SectionHeading id=\"old-man-old-woman\" level={level + 1}>\n        Old Man / Old Woman\n      </SectionHeading>\n      <Text>\n        This is a colloquial term similar to its English translation, e.g.\n        &quot;my old lady is a real battleaxe!&quot;\n      </Text>\n      <TableWrapper columns={[\n    // @ts-expect-error To be addressed in LO-12\n    ...TableWrapper.columnsPronouns, {\n      accessorKey: \"oldMan\",\n      // @ts-expect-error To be addressed in LO-12\n      cell: value => <TextBreakdown breakdown={value} typeFallback=\"PP\" />,\n      header: \"Old man\"\n    }, {\n      accessorKey: \"oldWoman\",\n      // @ts-expect-error To be addressed in LO-12\n      cell: value => <TextBreakdown breakdown={value} typeFallback=\"PP\" />,\n      header: \"Old woman\"\n    }]} data={rows} />\n    </>;\n}\n_c7 = OldManWomanTable;\nfunction SpouseTable({\n  level = 2\n}) {\n  const rows = [[\"Tshyal\u00E9 lo\u00B7n\u00E9\u00B7\", \"Charlie's spouse\"], [\"S\u00F3\u00B7s lo\u00B7n\u00E9\u00B7\", \"Susan's spouse\"], [\"ukyal\u00E1\u00B7s\u00E9\u0294 lo\u00B7n\u00E9\u00B7\", \"My cousin's spouse\"], [\"tsyat\u028C\u00B7l\u00F3\u00B7 lo\u00B7n\u00E9\u00B7\", \"Your friend's spouse\"]].map(([one, en]) => ({\n    one,\n    en\n  }));\n  return <>\n      <SectionHeading id=\"spouse\" level={level + 1}>\n        Spouse\n      </SectionHeading>\n      <Text>\n        <b>lo\u00B7n\u00E9\u00B7</b> is used to describe someone else&lsquo;s spouse, it is not\n        used for &quot;my spouse&quot; or &quot;your spouse&quot;.\n      </Text>\n      <TableWrapper columns={[{\n      accessorKey: \"en\",\n      cell: TableWrapper.textArrayCell,\n      header: \"English\"\n    }, {\n      accessorKey: \"one\",\n      cell: TableWrapper.textArrayCellBold,\n      header: \"Oneida\"\n    }]} data={rows} />\n    </>;\n}\n_c8 = SpouseTable;\nfunction BoyfriendGirlfriendTable({\n  level = 2\n}) {\n  const rows = [[\"i\", \"ak\"], [\"u\", \"sa\"], [\"m\", \"lao\"], [\"f\", \"ako\"]].map(([pronoun, p]) => {\n    return {\n      boyfriend: [{\n        text: p\n      }, \"nik\u028Chtl\u00FA\u00B7tsli\u0294\"],\n      girlfriend: [{\n        text: p\n      }, \"ya\u0294tas\u00E9\u00B7tsli\u0294\"],\n      pronoun\n    };\n  });\n  return <>\n      <SectionHeading id=\"girlfriend-boyfriend\" level={level + 1}>\n        Girlfriend / Boyfriend\n      </SectionHeading>\n      <TableWrapper columns={[\n    // @ts-expect-error To be addressed in LO-12\n    ...TableWrapper.columnsPronouns, {\n      accessorKey: \"boyfriend\",\n      // @ts-expect-error To be addressed in LO-12\n      cell: value => <TextBreakdown breakdown={value} typeFallback=\"PLB\" />,\n      header: \"Boyfriend\"\n    }, {\n      accessorKey: \"girlfriend\",\n      // @ts-expect-error To be addressed in LO-12\n      cell: value => <TextBreakdown breakdown={value} typeFallback=\"PLB\" />,\n      header: \"Girlfriend\"\n    }]} data={rows} />\n    </>;\n}\n_c9 = BoyfriendGirlfriendTable;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"RelationshipsArticle\");\n$RefreshReg$(_c2, \"MarriedTable\");\n$RefreshReg$(_c3, \"InARelationshipTable\");\n$RefreshReg$(_c4, \"SeparatedTable\");\n$RefreshReg$(_c5, \"EngagedTable\");\n$RefreshReg$(_c6, \"SingleTable\");\n$RefreshReg$(_c7, \"OldManWomanTable\");\n$RefreshReg$(_c8, \"SpouseTable\");\n$RefreshReg$(_c9, \"BoyfriendGirlfriendTable\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
