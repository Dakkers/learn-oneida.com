{
  "version": 3,
  "sources": ["../../../app/components/articles/GoodPeopleBadPeople.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/GoodPeopleBadPeople.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/GoodPeopleBadPeople.tsx\");\n  import.meta.hot.lastModified = \"1716730031921.3032\";\n}\n// REMIX HMR END\n\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { Flex } from \"@/design/components/flex\";\nexport function GoodPeopleBadPeopleArticle({\n  level = 1\n}) {\n  const goodPeopleData = [[[{\n    text: \"k\"\n  }, \"ukwe\u0294tiy\u00F3\"], [{\n    text: \"k\"\n  }, \"ukwe\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"s\"\n  }, \"ukwe\u0294tiy\u00F3\"], [{\n    text: \"s\"\n  }, \"ukwe\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"l\"\n  }, \"ukwe\u0294tiy\u00F3\"], [{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"l\"\n  }, \"ukwe\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"yak\"\n  }, \"ukwe\u0294tiy\u00F3\"], [{\n    text: \"yak\"\n  }, \"ukwe\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"l\u028Cn\"\n  }, \"ukwe\u0294tiy\u00F3hse\u0294\"], [{\n    text: \"l\u028Cn\"\n  }, \"ukwe\u0294tiy\u00F3hs\", \"kwe\u0294\"]]];\n  const badPeopleData = [[[{\n    text: \"k\"\n  }, \"ukwe\u0294t\u00E1ks\u028C\"], [{\n    text: \"k\"\n  }, \"ukwe\u0294taks\u028C\u0301\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"s\"\n  }, \"ukwe\u0294t\u00E1ks\u028C\"], [{\n    text: \"s\"\n  }, \"ukwe\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"l\"\n  }, \"ukwe\u0294t\u00E1ks\u028C\"], [{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"l\"\n  }, \"ukwe\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"yak\"\n  }, \"ukwe\u0294t\u00E1ks\u028C\"], [{\n    text: \"yak\"\n  }, \"ukwe\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"l\u028Cn\"\n  }, \"ukwe\u0294t\u00E1ks\u028Chse\u0294\"], [{\n    text: \"l\u028Cn\"\n  }, \"ukwe\u0294taks\u028Chs\", \"kwe\u0294\"]]];\n  const goodKidsData = [[[{\n    text: \"k\"\n  }, \"eksa\u0294tiy\u00F3\"], [{\n    text: \"k\"\n  }, \"eksa\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"s\"\n  }, \"eksa\u0294tiy\u00F3\"], [{\n    text: \"h\",\n    type: \"RPL\"\n  }, {\n    text: \"s\"\n  }, \"eksa\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"la\"\n  }, \"ksa\u0294tiy\u00F3\"], [{\n    text: \"la\"\n  }, \"ksa\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"ye\"\n  }, \"ksa\u0294tiy\u00F3\"], [{\n    text: \"ye\"\n  }, \"ksa\u0294tiyo\", \"hn\u00E9\u00B7\"]], [[{\n    text: \"lati\"\n  }, \"ksa\u0294tiy\u00F3hse\u0294\"], [{\n    text: \"lati\"\n  }, \"ksa\u0294tiy\u00F3hs\", \"kwe\u0294\"]]];\n  const badKidsData = [[[{\n    text: \"k\"\n  }, \"eksa\u0294t\u00E1ks\u028C\"], [{\n    text: \"k\"\n  }, \"eksa\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"s\"\n  }, \"eksa\u0294t\u00E1ks\u028C\"], [{\n    text: \"s\"\n  }, \"eksa\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"la\"\n  }, \"ksa\u0294t\u00E1ks\u028C\"], [{\n    text: \"la\"\n  }, \"ksa\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"ye\"\n  }, \"ksa\u0294t\u00E1ks\u028C\"], [{\n    text: \"ye\"\n  }, \"ksa\u0294taks\u028C\u0301\", \"hne\u0294\"]], [[{\n    text: \"lati\"\n  }, \"ksa\u0294t\u00E1ks\u028Chse\u0294\"], [{\n    text: \"lati\"\n  }, \"ksa\u0294taks\u028Chs\", \"kwe\u0294\"]]];\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading level={level}>Good and Bad People</SectionHeading>\n      <Text>\n        Here, two more conjugations are introduced. <b>iyo</b> makes the entity\n        &quot;good&quot; and <b>aks\u028C</b> other makes the &quot;bad&quot;.\n      </Text>\n      <SectionHeading level={level + 1}>\n        Good People\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={TableWrapper.createPastTenseColumns(\"PR\")} data={goodPeopleData.map(mapper)} />\n      <SectionHeading level={level + 1}>\n        Bad People\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={TableWrapper.createPastTenseColumns(\"PR\")} data={badPeopleData.map(mapper)} />\n      <SectionHeading level={level + 1}>\n        Good Kids\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={TableWrapper.createPastTenseColumns(\"PR\")} data={goodKidsData.map(mapper)} />\n      <SectionHeading level={level + 1}>\n        Bad Kids\n      </SectionHeading>\n      <TableWrapper\n    // @ts-expect-error To be addressed in LO-12\n    columns={TableWrapper.createPastTenseColumns(\"PR\")} data={badKidsData.map(mapper)} />\n    </Flex>;\n}\n_c = GoodPeopleBadPeopleArticle;\nconst mapper = ([left, right], i) => {\n  const pronoun = i === 0 ? \"i\" : i === 1 ? \"u\" : i === 2 ? \"m\" : i === 3 ? \"f\" : i === 4 ? \"ms\" : undefined;\n  return {\n    breakdown: left,\n    breakdownPast: right,\n    pronoun\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"GoodPeopleBadPeopleArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
