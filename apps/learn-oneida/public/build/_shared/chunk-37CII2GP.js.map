{
  "version": 3,
  "sources": ["../../../app/components/articles/ClockTime.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/ClockTime.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/ClockTime.tsx\");\n  import.meta.hot.lastModified = \"1717069385780.7822\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { Text } from \"@/design/components/text\";\nimport { SectionHeading } from \"../SectionHeading\";\nimport { List } from \"@/design/components/list\";\nconst simpleExamples = [[\"1:00 a.m.\", \"\u00FAska niyohwist\u00E1\u00B7e ast\u00E9htsi\u0294\"], [\"7:00 a.m.\", \"tsy\u00E1\u00B7tak niyohwist\u00E1\u00B7e astehtsi\"], [\"11:00 a.m.\", \"\u00FAska yawa\u00B7l\u00E9 niyohwist\u00E1\u00B7e astehtsi\"], [\"1:00 p.m.\", \"\u00FAska niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"], [\"7:00 p.m.\", \"tsy\u00E1\u00B7tak niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"], [\"11:00 p.m.\", \"\u00FAska yawa\u00B7l\u00E9 niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"]].map(([en, on]) => ({\n  en,\n  on\n}));\nconst minutesExamples = [[\"2:05 a.m.\", \"w\u00EDsk nikah\u00ED\u00B7kalake yotuk\u00F3htu t\u00E9kni niyohwist\u00E1\u00B7e ast\u00E9htsi\u0294\"], [\"3:30 a.m.\", \"tsha\u0294tewahs\u028Cn\u028C\u0301 \u00E1hs\u028C niyohwist\u00E1\u00B7e ast\u00E9htsi\u0294\"], [\"4:50 a.m.\", \"oye\u00B7l\u00ED\u00B7 nikah\u00ED\u00B7kalake tyono\u00B7l\u00FAhe w\u00EDsk niyohwist\u00E1\u00B7e ast\u00E9htsi\u0294\"], [\"2:05 p.m.\", \"w\u00EDsk nikah\u00ED\u00B7kalake yotuk\u00F3htu t\u00E9kni niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"], [\"3:30 p.m.\", \"tsha\u0294tewahs\u028Cn\u028C\u0301 \u00E1hs\u028C niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"], [\"5:50 p.m.\", \"oye\u00B7l\u00ED\u00B7 nikah\u00ED\u00B7kalake tyono\u00B7l\u00FAhe w\u00EDsk niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"]].map(([en, on]) => ({\n  en,\n  on\n}));\nconst eveningExamples = [[\"8:00 p.m.\", \"t\u00E9klu niyohwist\u00E1\u00B7e \u028Cy\u00F3\u00B7kalahwe\u0294\"], [\"9:00 p.m.\", \"w\u00E1tlu niyohwist\u00E1\u00B7e yo\u0294kal\u00E1sh\u028C\"], [\"10:00 p.m.\", \"oye\u00B7l\u00ED\u00B7 niyohwist\u00E1\u00B7e kwa\u0294ashut\u00E9\u00B7ke\"]].map(([en, on]) => ({\n  en,\n  on\n}));\nconst lastExamples = [[\"2:05 p.m.\", \"ost\u00FAha yotuk\u00F3htu t\u00E9kni niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"], [\"4:55 p.m\", \"n\u028C\u0301 ki\u0294 th\u00F3ha w\u00EDsk niyohwist\u00E1\u00B7e yotuk\u00F3htu \u028C\u0301ti\"]].map(([en, on]) => ({\n  en,\n  on\n}));\nexport function ClockTimeArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"clock-time\" level={level}>\n        Clock Time\n      </SectionHeading>\n      <Text>\n        Clock time in Oneida is a bit tricky. Let&lsquo;s start with a couple\n        words:\n      </Text>\n      <List>\n        <List.Item>\n          noon: <b>\u028C\u0301ty\u028C ni\u00B7k\u00E1le\u0332\u0294\u0332</b> OR <b>\u028Ct\u00ED</b>\n        </List.Item>\n        <List.Item>\n          midnight: <b>ahs\u00FAtha</b>\n        </List.Item>\n        <List.Item>\n          morning: <b>ast\u00E9htsi\u0294</b>\n        </List.Item>\n        <List.Item>\n          before: <b>tyono\u00B7l\u00FAhe</b> OR <b>kalo tsi\u0294 niyo\u00B7l\u00E9\u00B7</b> OR{\" \"}\n          <b>tsi\u0294 niyo\u00B7l\u00E9</b>\n        </List.Item>\n        <List.Item>\n          after: <b>yotuk\u00F3htu</b>\n        </List.Item>\n        <List.Item>\n          half-past: <b>tsha\u0294tewahs\u028Cn\u028C</b>\n        </List.Item>\n      </List>\n      <Text>\n        So if someone asks you what time it is, and it&lsquo;s midnight or noon,\n        you can simply say\n        <b>ahs\u00FAtha</b> or <b>\u028Ct\u00ED</b>, respectively. Now, let&lsquo;s look at a\n        couple simple examples:\n      </Text>\n\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={simpleExamples} />\n\n      <Text>\n        To incorporate minutes, there are a couple rules to establish...\n      </Text>\n      <List>\n        <List.Item>\n          When it&lsquo;s less than 30 minutes: &quot;X minutes after the\n          hour&quot;\n        </List.Item>\n        <List.Item>\n          When it&lsquo;s exactly 30 minutes: &quot;half-past&quot;\n        </List.Item>\n        <List.Item>\n          When it&lsquo;s more than 30 minutes: &quot;X minutes before the next\n          hour&quot;\n        </List.Item>\n      </List>\n\n      <Text>If this is confusing, take a look at the examples below.</Text>\n\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={minutesExamples} />\n\n      <Text>To make things even more confusing, you may instead hear:</Text>\n\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={eveningExamples} />\n\n      <Text>The new words above are:</Text>\n      <List>\n        <List.Item>\n          <b>yo\u0294kal\u00E1sh\u028C</b>: evening (right now)\n        </List.Item>\n        <List.Item>\n          <b>\u028Cy\u00F3\u00B7kalahwe</b>: this evening / tonight\n        </List.Item>\n        <List.Item>\n          <b>kwa\u0294ashut\u00E9\u00B7ke</b>: night-time\n        </List.Item>\n      </List>\n\n      <Text>\n        Lastly, we can use <b>ost\u00FAha</b> (a little bit) and <b>n\u028C\u0301 ki\u0294 th\u00F3ha</b>{\" \"}\n        (it is almost...) for more variety:\n      </Text>\n\n      <TableWrapper columns={TableWrapper.columnsEnglishOneida} data={lastExamples} />\n    </Flex>;\n}\n_c = ClockTimeArticle;\nvar _c;\n$RefreshReg$(_c, \"ClockTimeArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
