{
  "version": 3,
  "sources": ["../../../@/design/primitives/dropdown-menu.tsx", "../../../app/components/ParadigmTable.tsx"],
  "sourcesContent": ["import * as React from \"react\";\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst DropdownMenu = DropdownMenuPrimitive.Root;\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean;\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n));\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName;\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName;\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className,\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n));\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n));\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName;\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n));\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean;\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className,\n    )}\n    {...props}\n  />\n));\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  );\n};\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n};\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ParadigmTable.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ParadigmTable.tsx\");\n  import.meta.hot.lastModified = \"1718240764403.4563\";\n}\n// REMIX HMR END\n\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/design/primitives/dropdown-menu\";\nimport { Flex } from \"@/design/components/flex\";\nimport { Input } from \"@/design/primitives/input\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/design/primitives/table\";\nimport { Settings } from \"lucide-react\";\nimport React from \"react\";\nimport { PRONOUN_MAP_EN, PRONOUN_MAP_ONEIDA, pronouns, translatePhrase } from \"~/utils\";\nimport { TextBreakdown } from \"./TextBreakdown\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/design/primitives/form\";\nimport * as z from \"zod\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Button } from \"@/design/primitives/button\";\nimport { Notice } from \"@/design/components/notice\";\nimport _ from \"lodash\";\nimport { sanitizeIrregularCharacters, whisperizeWord } from \"~/utils/words\";\nimport { Bleed } from \"@/design/components/Bleed\";\nconst formSchema = z.object(Object.fromEntries(pronouns.map(p => [p, z.string().nullish()])));\nconst ParadigmTableContext = React.createContext(null);\nexport function ParadigmTable({\n  allowedPronouns = [],\n  bleed = {\n    xs: 0,\n    md: 16,\n    lg: 32\n  },\n  columnVisibility = {},\n  data,\n  isTesting = false,\n  translationFn\n}) {\n  _s();\n  const [colVisibility, setColVisibility] = React.useState({\n    pronounOneida: true,\n    pronounEnglish: true,\n    translation: true,\n    ...columnVisibility\n  });\n  const [showBreakdown, setShowBreakdown] = React.useState(true);\n  const [isCorrect, setIsCorrect] = React.useState(false);\n  const form = useForm({\n    defaultValues: {},\n    resolver: zodResolver(formSchema)\n  });\n  function onSubmit(values) {\n    let hasErrors = false;\n    for (const key in values) {\n      const value = values[key];\n      const phraseObj = data.phrases.find(p => p.pronoun === key);\n      if (phraseObj) {\n        if (!value || sanitizeIrregularCharacters(value) !== sanitizeIrregularCharacters(phraseObj.phrase)) {\n          hasErrors = true;\n          form.setError(key, {\n            message: `Answer: ${phraseObj.phrase}`,\n            type: \"custom\"\n          });\n        }\n      }\n    }\n    setIsCorrect(!hasErrors);\n  }\n  const rowsToShow = React.useMemo(() => {\n    if (allowedPronouns.length === 0) {\n      return data.phrases;\n    }\n    return data.phrases.filter(p => allowedPronouns.includes(p.pronoun));\n  }, [data.phrases, allowedPronouns]);\n  return <ParadigmTableContext.Provider value={{\n    colVisibility,\n    form,\n    isTesting,\n    showBreakdown,\n    translation: data.translation,\n    translationFn\n  }}>\n      <Bleed mx={bleed}>\n        <Flex justify=\"end\">\n          <SettingsMenu toggleColumn={columnName => setColVisibility({\n          ...colVisibility,\n          [columnName]: !colVisibility[columnName]\n        })} toggleBreakdown={setShowBreakdown} />\n        </Flex>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)}>\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  {colVisibility.pronounEnglish && <TableHead>Pronoun (EN)</TableHead>}\n                  {colVisibility.pronounOneida && <TableHead>Pronoun</TableHead>}\n                  {isTesting ? <>\n                      {colVisibility.translation && <TableHead>Translation</TableHead>}\n                      <TableHead>---</TableHead>\n                    </> : <>\n                      <TableHead>Phrase</TableHead>\n                      {colVisibility.translation && <TableHead>Translation</TableHead>}\n                    </>}\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {rowsToShow.map((row, i) => <TableRowWrapper key={i} row={row} typeFallback={data.type} whispered={data.whispered} />)}\n              </TableBody>\n            </Table>\n\n            {isTesting && <>\n                {form.formState.submitCount > 0 && <Notice intent={isCorrect ? \"positive\" : \"negative\"}>\n                    {isCorrect ? \"Good job! You answered each prompt correctly.\" : \"There were some mistakes with your answers. Scroll up to take a look.\"}\n                  </Notice>}\n\n                <Flex justify=\"end\">\n                  <Button type=\"submit\">Submit</Button>\n                </Flex>\n              </>}\n          </form>\n        </Form>\n      </Bleed>\n    </ParadigmTableContext.Provider>;\n}\n_s(ParadigmTable, \"2ze92T1AWWBVnoa3MGkzGXenMtA=\", false, function () {\n  return [useForm];\n});\n_c = ParadigmTable;\nfunction TableRowWrapper({\n  row,\n  suffix,\n  typeFallback,\n  whispered = false\n}) {\n  _s2();\n  const context = React.useContext(ParadigmTableContext);\n  if (!context) {\n    throw new Error(\"Missing context\");\n  }\n  const {\n    colVisibility,\n    showBreakdown\n  } = context;\n  const translatedPhrase = translatePhrase(context.translation, row.pronoun, context.translationFn);\n  return <TableRow>\n      {colVisibility.pronounEnglish && <TableCell>{PRONOUN_MAP_EN[row.pronoun]}</TableCell>}\n      {colVisibility.pronounOneida && <TableCell>{PRONOUN_MAP_ONEIDA[row.pronoun]}</TableCell>}\n      {context.isTesting ? <>\n          {colVisibility.translation && <TableCell>{translatedPhrase}</TableCell>}\n          <TableCell>\n            <FormField control={context.form.control} name={row.pronoun} render={({\n          field\n        }) => <FormItem>\n                  <FormControl>\n                    <Input autoComplete=\"off\" placeholder=\"Type here...\" {...field} value={field.value ?? \"\"} />\n                  </FormControl>\n\n                  <FormMessage />\n                </FormItem>} />\n          </TableCell>\n        </> : <>\n          <TableCell>\n            {showBreakdown ? <TextBreakdown breakdown={row.breakdown} suffix={suffix} typeFallback={typeFallback} whispered={row.whispered ?? whispered ?? false} /> : row.phrase}\n          </TableCell>\n          {colVisibility.translation && <TableCell>{translatedPhrase}</TableCell>}\n        </>}\n    </TableRow>;\n}\n_s2(TableRowWrapper, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c2 = TableRowWrapper;\nfunction SettingsMenu({\n  toggleBreakdown,\n  toggleColumn\n}) {\n  _s3();\n  const context = React.useContext(ParadigmTableContext);\n  if (!context) {\n    throw new Error(\"Missing context\");\n  }\n  const {\n    colVisibility,\n    isTesting,\n    showBreakdown\n  } = context;\n  return <DropdownMenu>\n      <DropdownMenuTrigger>\n        <Settings className=\"print:hidden\" />\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"w-56\">\n        <DropdownMenuItem onClick={() => toggleColumn(\"pronounEnglish\")}>\n          {colVisibility.pronounEnglish ? \"Hide Pronoun (EN) column\" : \"Show Pronoun (EN) column\"}\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => toggleColumn(\"pronounOneida\")}>\n          {colVisibility.pronounOneida ? \"Hide Pronoun column\" : \"Show Pronoun column\"}\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => toggleColumn(\"translation\")}>\n          {colVisibility.translation ? \"Hide Translation column\" : \"Show Translation column\"}\n        </DropdownMenuItem>\n        {!isTesting && <DropdownMenuItem onClick={() => toggleBreakdown(!showBreakdown)}>\n            {showBreakdown ? \"Hide text colors\" : \"Show text colors\"}\n          </DropdownMenuItem>}\n      </DropdownMenuContent>\n    </DropdownMenu>;\n}\n_s3(SettingsMenu, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n_c3 = SettingsMenu;\nexport function createParadigmData(data, allowedPronouns) {\n  const result = _.cloneDeep(data);\n  for (let i = 0; i < result.phrases.length; i++) {\n    const element = result.phrases[i];\n    const endIndex = element.breakdown.length - 1;\n    if (element.whispered ?? data.whispered ?? true) {\n      const lastElement = element.breakdown[endIndex];\n      const lastPartOfBreakdown = getBreakdownTextPart(getBreakdownTextPart(lastElement));\n      const lastPartWhispered = whisperizeWord(lastPartOfBreakdown);\n      element.breakdown[endIndex] = typeof lastElement === \"string\" ? lastPartWhispered : {\n        text: lastPartWhispered,\n        type: Array.isArray(lastElement) ? lastElement[1] : lastElement.type ?? undefined\n      };\n    }\n    element.phrase = element.breakdown.map(part => getBreakdownTextPart(part)).join(\"\");\n    if (allowedPronouns) {\n      element.pronoun = allowedPronouns[i];\n    }\n  }\n  result.whispered = data.whispered ?? true;\n  return result;\n}\nconst getBreakdownTextPart = part => typeof part === \"string\" ? part : Array.isArray(part) ? part[0] : part.text;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ParadigmTable\");\n$RefreshReg$(_c2, \"TableRowWrapper\");\n$RefreshReg$(_c3, \"SettingsMenu\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "React", "_"]
}
