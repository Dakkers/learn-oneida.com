{
  "version": 3,
  "sources": ["../../../app/components/articles/CountingTime.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/CountingTime.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/CountingTime.tsx\");\n  import.meta.hot.lastModified = \"1717069385781.4854\";\n}\n// REMIX HMR END\n\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { SectionHeading } from \"../SectionHeading\";\nexport function CountingTimeArticle({\n  level = 1\n}) {\n  const [firstTable, secondTable] = createCountingTimeData();\n  return <>\n      <SectionHeading id=\"counting-time\" level={level}>\n        Counting Lengths of Time\n      </SectionHeading>\n      <TableWrapper columns={[{\n      accessorKey: \"num\",\n      header: \"\"\n    }, {\n      accessorKey: \"minutes\",\n      header: \"Minutes\"\n    }, {\n      accessorKey: \"hours\",\n      header: \"Hours\"\n    }, {\n      accessorKey: \"days\",\n      header: \"Days\"\n    }, {\n      accessorKey: \"nights\",\n      header: \"Nights\"\n    }]} data={firstTable} />\n\n      <TableWrapper columns={[{\n      accessorKey: \"num\",\n      header: \"\"\n    }, {\n      accessorKey: \"weeks\",\n      header: \"Weeks\"\n    }, {\n      accessorKey: \"months\",\n      header: \"Months\"\n    }, {\n      accessorKey: \"years\",\n      header: \"Years\"\n    }]} data={secondTable} />\n    </>;\n}\n_c = CountingTimeArticle;\nexport function createCountingTimeData() {\n  const firstTable = [{\n    num: 1,\n    minutes: \"swasliyeta\u0294k\",\n    hours: \"uska kahwista\u0294eks\",\n    days: \"sw\u028Chn\u00EDslat\",\n    nights: \"swahsu\u00B7t\u00E1t\"\n  }, {\n    num: 2,\n    minutes: \"tewasliyeta\u0294k\",\n    hours: \"tekahwista\u0294eks\",\n    days: \"tew\u028Chnislak\u00E9\",\n    nights: \"tewahsu\u00B7t\u00E1ke\"\n  }, {\n    num: 3,\n    minutes: \"\u00E1hs\u028C niwasliyeta\u0294k\",\n    hours: \"\u00E1hs\u028C nikahwista\u0294eks\",\n    days: \"\u00E1hs\u028C niw\u028Chnislak\u00E9\",\n    nights: \"\u00E1hs\u028C niwahsu\u00B7t\u00E1ke\"\n  }];\n  const secondTable = [{\n    num: 1,\n    weeks: \"sw\u028C\u00B7t\u00E1t\",\n    months: \"sw\u028Chn\u00ED\u00B7tat\",\n    years: \"tsy\u00F3hslat\"\n  }, {\n    num: 2,\n    weeks: \"tew\u028C\u00B7t\u00E1ke\",\n    months: \"tew\u028Chn\u00ED\u00B7take\",\n    years: \"tey\u00F3hslake\u0294\"\n  }, {\n    num: 3,\n    weeks: \"\u00E1hs\u028C niw\u028C\u00B7t\u00E1ke\",\n    months: \"\u00E1hs\u028C niw\u028Chn\u00ED\u00B7take\",\n    years: \"\u00E1hs\u028C niy\u00F3hslak\u00E9\"\n  }];\n  return [firstTable, secondTable];\n}\nvar _c;\n$RefreshReg$(_c, \"CountingTimeArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AA0BS;AAzBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+CAAiD,EAAE;AAAA,EAC5F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0C;AAC1C,cAAY,IAAI,eAAe;AACjC;AAKO,SAAS,oBAAoB;AAAA,EAClC,QAAQ;AACV,GAAG;AACD,QAAM,CAAC,YAAY,WAAW,IAAI,uBAAuB;AACzD,SAAO,sFACH;AAAA,uDAAC,kBAAe,IAAG,iBAAgB,OAAc,wCAAjD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,gBAAa,SAAS,CAAC;AAAA,MACxB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,CAAC,GAAG,MAAM,cAfR;AAAA;AAAA;AAAA;AAAA,WAeoB;AAAA,IAEpB,mDAAC,gBAAa,SAAS,CAAC;AAAA,MACxB,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,aAAa;AAAA,MACb,QAAQ;AAAA,IACV,CAAC,GAAG,MAAM,eAZR;AAAA;AAAA;AAAA;AAAA,WAYqB;AAAA,OAjClB;AAAA;AAAA;AAAA;AAAA,SAkCL;AACJ;AACA,KAAK;AACE,SAAS,yBAAyB;AACvC,QAAM,aAAa,CAAC;AAAA,IAClB,KAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,KAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,GAAG;AAAA,IACD,KAAK;AAAA,IACL,SAAS;AAAA,IACT,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,CAAC;AACD,QAAM,cAAc,CAAC;AAAA,IACnB,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,GAAG;AAAA,IACD,KAAK;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,EACT,CAAC;AACD,SAAO,CAAC,YAAY,WAAW;AACjC;AACA,IAAI;AACJ,aAAa,IAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
