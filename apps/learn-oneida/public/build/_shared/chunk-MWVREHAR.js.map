{
  "version": 3,
  "sources": ["../../../app/components/articles/Nations.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/articles/Nations.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/articles/Nations.tsx\");\n  import.meta.hot.lastModified = \"1716730031922.263\";\n}\n// REMIX HMR END\n\nimport { Flex } from \"@/design/components/flex\";\nimport { TableWrapper } from \"@/design/components/tableWrapper\";\nimport { Text } from \"@/design/components/text\";\nimport { ParadigmTable, createParadigmData } from \"../ParadigmTable\";\nimport { SectionHeading } from \"../SectionHeading\";\nconst allowedPronouns = [\"i\", \"u\", \"m\", \"f\"];\nconst NATIONS_LIST = [{\n  en: \"Mohawk\",\n  on: \"Kany\u028C\u0294keha\u00B7k\u00E1\u00B7\",\n  translation: \"flint\",\n  key: \"mohawk\"\n}, {\n  en: \"Oneida\",\n  on: \"On\u028Cyo\u0294te\u0294a\u00B7k\u00E1\u00B7\",\n  translation: \"standing stone\",\n  key: \"oneida\"\n}, {\n  en: \"Onondaga\",\n  on: \"Onuta\u0294keha\u00B7k\u00E1\u00B7\",\n  translation: \"hills\",\n  key: \"onondaga\"\n}, {\n  en: \"Cayuga\",\n  on: \"Kayuke\u0294a\u00B7k\u00E1\u00B7\",\n  translation: \"great swamp / pipe\",\n  key: \"cayuga\"\n}, {\n  en: \"Seneca\",\n  on: \"Tsi\u0294twana\u0294a\u00B7k\u00E1\u00B7\",\n  translation: \"great hill / mountain\",\n  key: \"seneca\"\n}, {\n  en: \"Tuscarora\",\n  on: \"Taskal\u00F3\u00B7lu\",\n  translation: \"hemp / shirt\",\n  key: \"tuscarora\"\n}, {\n  en: \"Ojibway\",\n  on: \"Latitwa\u0294k\u00E1nha\u0294\",\n  translation: \"(unknown)\",\n  key: \"ojibway\"\n}, {\n  en: \"Algonquin\",\n  on: \"Latilu\u00B7t\u00E1ks\",\n  translation: \"They eat trees\",\n  key: \"algonquin\"\n}, {\n  en: \"Cree\",\n  on: \"Kalhakuhlon\u00FA\",\n  translation: \"People of the forest (?)\",\n  key: \"cree\"\n}, {\n  en: \"Huron\",\n  on: \"Thotinut\u00E1the\",\n  translation: \"They're making buttermilk\",\n  key: \"huron\"\n}, {\n  en: \"Inuit\",\n  on: \"Othole\u0294kehlo\u00B7n\u00FA\",\n  translation: \"People of the north\",\n  key: \"inuit\"\n}, {\n  en: \"American\",\n  on: \"Ostohlonu\u0294keha\u00B7k\u00E1\",\n  translation: \"(unknown)\",\n  key: \"american\"\n}, {\n  en: \"French-Canadian\",\n  on: \"Wal\u00E9\u00B7lu\",\n  translation: \"(unknown)\",\n  key: \"french-canadian\"\n}];\nconst dataNations = createParadigmData({\n  phrases: [{\n    breakdown: [`On\u028Cyote\u0294a\u00B7k\u00E1\u00B7 ni`, {\n      text: \"wak\"\n    }, \"uhutsy\u00F3\u00B7t\u028C\u0332\u0294\"]\n  }, {\n    breakdown: [`On\u028Cyote\u0294a\u00B7k\u00E1\u00B7 ni`, {\n      text: \"s\"\n    }, \"uhutsy\u00F3\u00B7t\u028C\u0332\u0294\"]\n  }, {\n    breakdown: [`On\u028Cyote\u0294a\u00B7k\u00E1\u00B7 ni`, {\n      text: \"ha\"\n    }, \"uhutsy\u00F3\u00B7t\u028C\u0332\u0294\"]\n  }, {\n    breakdown: [`On\u028Cyote\u0294a\u00B7k\u00E1\u00B7 ni`, {\n      text: \"yaka\"\n    }, \"uhutsy\u00F3\u00B7t\u028C\u0332\u0294\"]\n  }],\n  translation: \"{{pronoun}} {{refVerb}} an Oneida\",\n  type: \"PB\"\n}, allowedPronouns);\nexport function NationsArticle({\n  level = 1\n}) {\n  return <Flex direction=\"column\" gap={4}>\n      <SectionHeading id=\"nations\" level={level}>\n        Nations\n      </SectionHeading>\n      <Text>\n        Below is a list of nations and nationalities. These include nations part\n        of the Haudenosaunee confederacy and others outside.\n      </Text>\n      <TableWrapper columns={[...TableWrapper.columnsEnglishOneida, {\n      accessorKey: \"translation\",\n      header: \"Literal translation\"\n    }]} data={NATIONS_LIST} />\n      <Text>Here are a couple examples that you can use in sentences:</Text>\n      <ParadigmTable allowedPronouns={allowedPronouns} data={dataNations} />\n    </Flex>;\n}\n_c = NationsArticle;\nvar _c;\n$RefreshReg$(_c, \"NationsArticle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
